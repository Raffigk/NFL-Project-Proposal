runApp()
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
View(map.college.data)
View(players.college.data)
runApp()
runApp()
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
runApp()
runApp()
nfl.map<- map.college.data %>%
leaflet() %>%
addTiles() %>%
setView(lng = -114.805089, lat = 35.3327636, zoom = 3) %>%
addMarkers(clusterOptions = maxClusterRadius(3), markerClusterOptions(zoomSnap = 0,iconCreateFunction=JS(
iconCreateFunction=JS("function (cluster) {
var childCount = cluster.getChildCount();
var c = ' marker-cluster-';
c += 'small';
return new L.DivIcon({ html:
'<div><span>' + childCount + '</span></div>',
className: 'marker-cluster' + c, iconSize: new
L.Point(40, 40)});}"))),
label = paste0(strwrap(map.college.data$Official.Name), ": ", strwrap(map.college.data$n), " NFL players drafted") ,
lng = (as.numeric(map.college.data$LONGITUDE)), lat = (as.numeric(map.college.data$LATITUDE)), icon = makeIcon(
iconUrl = map.college.data$X.1,
iconWidth = 50, iconHeight = 40)) %>%
addTiles()
nfl.map<- map.college.data %>%
leaflet() %>%
addTiles() %>%
setView(lng = -114.805089, lat = 35.3327636, zoom = 3) %>%
addMarkers(clusterOptions = maxClusterRadius = 3, markerClusterOptions(zoomSnap = 0,iconCreateFunction=JS(
iconCreateFunction=JS("function (cluster) {
var childCount = cluster.getChildCount();
var c = ' marker-cluster-';
c += 'small';
return new L.DivIcon({ html:
'<div><span>' + childCount + '</span></div>',
className: 'marker-cluster' + c, iconSize: new
L.Point(40, 40)});}"))),
label = paste0(strwrap(map.college.data$Official.Name), ": ", strwrap(map.college.data$n), " NFL players drafted") ,
lng = (as.numeric(map.college.data$LONGITUDE)), lat = (as.numeric(map.college.data$LATITUDE)), icon = makeIcon(
iconUrl = map.college.data$X.1,
iconWidth = 50, iconHeight = 40)) %>%
addTiles()
nfl.map<- map.college.data %>%
leaflet() %>%
addTiles() %>%
setView(lng = -114.805089, lat = 35.3327636, zoom = 3) %>%
addMarkers(clusterOptions = maxClusterRadius = '3', markerClusterOptions(zoomSnap = 0,iconCreateFunction=JS(
iconCreateFunction=JS("function (cluster) {
var childCount = cluster.getChildCount();
var c = ' marker-cluster-';
c += 'small';
return new L.DivIcon({ html:
'<div><span>' + childCount + '</span></div>',
className: 'marker-cluster' + c, iconSize: new
L.Point(40, 40)});}"))),
label = paste0(strwrap(map.college.data$Official.Name), ": ", strwrap(map.college.data$n), " NFL players drafted") ,
lng = (as.numeric(map.college.data$LONGITUDE)), lat = (as.numeric(map.college.data$LATITUDE)), icon = makeIcon(
iconUrl = map.college.data$X.1,
iconWidth = 50, iconHeight = 40)) %>%
addTiles()
nfl.map<- map.college.data %>%
leaflet() %>%
addTiles() %>%
setView(lng = -114.805089, lat = 35.3327636, zoom = 3) %>%
addMarkers(clusterOptions = markerClusterOptions(zoomSnap = 0,iconCreateFunction=JS(
iconCreateFunction=JS("function (cluster) {
var childCount = cluster.getChildCount();
var c = ' marker-cluster-';
c += 'small';
return new L.DivIcon({ html:
'<div><span>' + childCount + '</span></div>',
className: 'marker-cluster' + c, iconSize: new
L.Point(40, 40)});}"))),
label = paste0(strwrap(map.college.data$Official.Name), ": ", strwrap(map.college.data$n), " NFL players drafted") ,
lng = (as.numeric(map.college.data$LONGITUDE)), lat = (as.numeric(map.college.data$LATITUDE)), icon = makeIcon(
iconUrl = map.college.data$X.1,
iconWidth = 50, iconHeight = 40)) %>%
addTiles()
nfl.map<- map.college.data %>%
leaflet() %>%
addTiles() %>%
setView(lng = -114.805089, lat = 35.3327636, zoom = 3) %>%
addMarkers(clusterOptions = markerClusterOptions(iconCreateFunction=JS(
iconCreateFunction=JS("function (cluster) {
var childCount = cluster.getChildCount();
var c = ' marker-cluster-';
c += 'small';
return new L.DivIcon({ html:
'<div><span>' + childCount + '</span></div>',
className: 'marker-cluster' + c, iconSize: new
L.Point(40, 40)});}"))),
label = paste0(strwrap(map.college.data$Official.Name), ": ", strwrap(map.college.data$n), " NFL players drafted") ,
lng = (as.numeric(map.college.data$LONGITUDE)), lat = (as.numeric(map.college.data$LATITUDE)), icon = makeIcon(
iconUrl = map.college.data$X.1,
iconWidth = 50, iconHeight = 40)) %>%
addTiles()
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
source('~/map.tester.R', echo=TRUE)
runApp()
View(map.college.data)
runApp()
runApp()
runApp()
player.data <- player.data %>% filter(Pos == input$Pos)
player.data <- read.csv("Data/map.player.data.csv", stringsAsFactors = FALSE)
college.data <- read.csv("Data/map.college.data.csv", stringsAsFactors = FALSE)
player.data <- player.data %>% filter(Pos == input$Pos)
map.college.data <- college.data %>% filter(Official.Name == player.data$Official.Name)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(shinythemes)
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(player.data)
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
GetTeam <- function(pos) {
if (length(grep(pos, defense.team)) != 0) {
team = 'Defense'
} else if (length(grep(pos, offense.team)) != 0) {
team = 'Offense'
} else if (length(grep(pos, special.team)) != 0) {
team = 'Special Teams'
} else {
team = NULL
}
return (team)
}
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
library(dplyr)
# Scatterplot that maps position to type of statistic, based on round pick
#setwd("~/Desktop/INFO201/NFL-Project-Proposal")
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
#Data for this chart
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
TeamTe
defense.team <- c('DT', 'DE', 'DB', 'MLB', 'OLB', 'CB', 'S', 'FS', 'ILB', 'DL', 'SS', 'LB')
offense.team <- c('C', 'G', 'T', 'QB', 'RB', 'WR', 'TE', 'OL', 'NT', 'FB')
special.team <- c('K', 'H', 'LS', 'P', 'KOS', 'KR', 'PR')
# Takes in a position to determine which team a player is on
GetTeam <- function(pos) {
if (length(grep(pos, defense.team)) != 0) {
team = 'Defense'
} else if (length(grep(pos, offense.team)) != 0) {
team = 'Offense'
} else if (length(grep(pos, special.team)) != 0) {
team = 'Special Teams'
} else {
team = NULL
}
return (team)
}
# Add column to dataframe that includes specific positions
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
#Adding column to make calculations easier
Agg_Position <- function(pos) {
if (pos == 'LB' | pos == 'MLB' | pos == 'ILB' | pos == 'OLB') {
new.pos = 'LB'
} else if (pos == 'S' | pos == 'SS' | pos == 'FS') {
new.pos = 'S'
} else if (pos == 'CB' | pos == 'DB') {
new.pos = 'CB'
} else {
new.pos = pos
}
return(new.pos)
}
# Because some positions are very specific, add a column to the dataframe that provides a generalized position for each player
draft.data <- draft.data %>%
mutate(GenPos = (lapply(draft.data$Pos, Agg_Position)))
all.years <- unique(draft.data$Year)
View(draft.data)
runApp()
View(map.college.data)
write.csv(draft.data, file = "data/player.data.csv", row.names = FALSE)
player.data <- data.frame(matrix(unlist(draft.data)))
View(player.data)
source('~/Desktop/INFO_NFL/NFL-Project-Proposal/OrganizeData.R', echo=TRUE)
player.data <- data.frame(matrix(unlist(draft.data), nrow = 8427))
View(player.data)
source('~/Desktop/INFO_NFL/NFL-Project-Proposal/OrganizeData.R', echo=TRUE)
library(dplyr)
# Scatterplot that maps position to type of statistic, based on round pick
#setwd("~/Desktop/INFO201/NFL-Project-Proposal")
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
#Data for this chart
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
TeamTe
defense.team <- c('DT', 'DE', 'DB', 'MLB', 'OLB', 'CB', 'S', 'FS', 'ILB', 'DL', 'SS', 'LB')
offense.team <- c('C', 'G', 'T', 'QB', 'RB', 'WR', 'TE', 'OL', 'NT', 'FB')
special.team <- c('K', 'H', 'LS', 'P', 'KOS', 'KR', 'PR')
# Takes in a position to determine which team a player is on
GetTeam <- function(pos) {
if (length(grep(pos, defense.team)) != 0) {
team = 'Defense'
} else if (length(grep(pos, offense.team)) != 0) {
team = 'Offense'
} else if (length(grep(pos, special.team)) != 0) {
team = 'Special Teams'
} else {
team = NULL
}
return (team)
}
# Add column to dataframe that includes specific positions
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
#Adding column to make calculations easier
Agg_Position <- function(pos) {
if (pos == 'LB' | pos == 'MLB' | pos == 'ILB' | pos == 'OLB') {
new.pos = 'LB'
} else if (pos == 'S' | pos == 'SS' | pos == 'FS') {
new.pos = 'S'
} else if (pos == 'CB' | pos == 'DB') {
new.pos = 'CB'
} else {
new.pos = pos
}
return(new.pos)
}
# Because some positions are very specific, add a column to the dataframe that provides a generalized position for each player
draft.data <- draft.data %>%
mutate(GenPos = (lapply(draft.data$Pos, Agg_Position)))
player.data <- data.frame(matrix(unlist(draft.data), nrow = 8427))
View(player.data)
typeof(player.data)
typeof(draft.data)
player.data <- data.frame(matrix(unlist(draft.data), nrow = 8427, byrow=T))
typeof(player.data)
player.data <- data.frame(matrix(unlist(draft.data), nrow = 8427, byrow=T), stringsAsFactors = FALSE)
typeof(player.data)
View(player.data)
player.data <- data.frame(matrix(unlist(draft.data), nrow = 8427), stringsAsFactors = FALSE)
View(player.data)
draft.data <- draft.data %>%
mutate(GenPos = (lapply(draft.data$Pos, Agg_Position)))
player.data <- data.frame(matrix(unlist(draft.data), nrow = 8427), stringsAsFactors = FALSE)
typeof(player.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(draft.data)
runApp()
map.college.data <- college.data %>% filter(Official.Name %in% player.data$Official.Name)
View(map.college.data)
player.data <- draft.data
# data for each individual college
college.data <- read.csv("Data/map.college.data.csv", stringsAsFactors = FALSE)
View(player.data)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk, Official.Name)
player.data <- draft.data
View(player.data)
runApp()
runApp()
player.data <- player.data %>% filter(Pos == "QB")
Vew(player.data)
View(player.data)
player.data <- draft.data %>% filter(Year >= 2005)
runApp()
View(player.data)
View(college.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(player.data)
View(college.data)
player.data <- draft.data %>% filter(Year >= 2005)
View(player.data)
source('~/Desktop/INFO_NFL/NFL-Project-Proposal/OrganizeData.R', echo=TRUE)
source('~/Desktop/INFO_NFL/NFL-Project-Proposal/OrganizeData.R', echo=TRUE)
source('~/Desktop/INFO_NFL/NFL-Project-Proposal/OrganizeData.R', echo=TRUE)
runApp()
player.data <- draft.data %>% filter(Year >= 2005)
View(player.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nrow(player.data)
runApp()
runApp()
map.college.data <- college.data %>% filter(Official.Name %in% player.data$Official.Name)
runApp()
View(full.draft.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tester.data <- player.data %>% filter(Official.Name == "Albion College")
View(tester.data)
tester.data <- player.data %>% filter(Official.Name == "Auburn University")
tester.data
View(tester.data)
tester.data <- nrow(player.data %>% filter(Official.Name == "Auburn University"))
tester.data
runApp()
View(player.data)
tester.data <- player.data %>% filter(Official.Name == map.college.data$Official.Name)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(player.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
player.data <- draft.data
runApp()
View(player.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
