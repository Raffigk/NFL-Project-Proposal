select(results.first_name, results.last_name, count.x)
rep.committees
View(rep.committees)
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste0(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- rep.committees %>%
group_by(results.bioguide_id) %>%
summarise(count = n()) %>%
left_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
View(rep.committees)
barplot(rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste0(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- rep.committees %>%
group_by(results.bioguide_id) %>%
summarise(count = n()) %>%
left_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
View(rep.committees)
rep.id <- results.leg$results.bioguide_id
rep.committees
colnames(rep.committees)
colnames(rep.committees)
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 4))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", x= "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), horiz = TRUE, xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", las=2, horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", las = 0, horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", las = 1, horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar=c(5, 4, 4, 8) + 0.1), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar=c(2, 4, 5, 3), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar=c(2, 4, 5, 3)), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(las = 1), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar = rep(.5,4)), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
par(mar = c(5, 8, 8, 2))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
par(mar = c(5, 8, 8, 2))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
par(mar = c(5, 8, 8, 2))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
rep.committees$results.bioguide_id
rand(rep.committees$results.bioguide_id)
cantwell.id <- rep.committees$results.bioguide_id
rep.committees$results.bioguide_id
cantwell.id <- rep.committees$results.bioguide_id[1]
cantwell.id
results.rep
View(results.rep)
results.leg
View(results.leg)
cantwell.id <- rep.committees$results.bioguide_id[3]
cantwell.id <- results.leg$results.bioguide_id[3]
cantwell.id
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id))
response.commit
cantwell.id <- results.leg$results.bioguide_id[3]
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id))
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
results.dist
View(results.dist)
cantwell.id <- results.leg$results.bioguide_id[3]
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "subcommittee=false"))
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "subcommittee=false"))
response.commit
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id))
response.commit
View(response.commit)
response.commit
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "&subcommittee=false"))
response.commit
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
cantwell.id <- results.leg$results.bioguide_id[3]
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "&subcommittee=false"))
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
results.dist
cantwell.committee <- results.dist[1]
View(cantwell.committee)
cantwell.committee <- results.dist[, 1]
View(cantwell.committee)
cantwell.committee <- results.dist[1, ]
View(cantwell.committee)
results.leg
View(results.leg)
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= "members""))
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
response.commit
View(results.dist)
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
body <- fromJSON(content(results.dist,"text"))$results$members[[1]] %>% flatten()
View(results.dist)
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
cantwell.committee.id <- cantwell.committee$results.committee_id
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
View(all.members)
results.dist <- fromJSON(content(all.members, "text")) %>%
data.frame() %>%
flatten()
results.all.members <- fromJSON(content(all.members, "text")) %>%
data.frame() %>%
flatten()
View(results.dist)
View(results.all.members)
body <- fromJSON(content(all.members,"text"))$results$members[[1]] %>% flatten()
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'")) %>% data.frame()
all.members <- data.frame(all.members)
join.rep.committees
View(join.rep.committees)
View(results.leg)
View(rep.committees)
committee <- rep.committees %>%
filter(results.subcommittee == FALSE)
chosen.committee <- committee[6,]
chosen.committee <- committee[1,]
my.committee <- committee[1,]
my.committee.member.fname <- filter(results.leg, results.bioguide_id == selected.committee.member) %>%
select(results.first_name) %>%
first
my.committee.member.fname <- filter(results.leg, results.bioguide_id == my.committee.member) %>%
select(results.first_name) %>%
first
my.committee.member <- my.committee$results.bioguide_id
my.committee.member.fname <- filter(results.leg, results.bioguide_id == my.committee.member) %>%
select(results.first_name) %>%
first
my.committee.member.fname
my.committee.member.lname <- filter(results.leg, results.bioguide_id == my.committee.member) %>%
select(results.last_name) %>%
first
my.committee.name <- my.committee$results.name
my.committee.id <- my.committee$results.committee_id
committee.members <- GET(paste0(base.uri, "/committees?committee_id=", my.committee.id, "&fields=members"))
chairman.fname <- results.committee.members %>%
filter(title == "Chairman") %>%
select(legislator.first_name)
my.committee.name <- my.committee$results.name
my.committee.id <- my.committee$results.committee_id
response.committee.members <- GET(paste0(base.uri, "/committees?committee_id=", my.committee.id, "&fields=members"))
results.committee.members <- fromJSON(content(response.committee.members, "text"))$results$members[[1]] %>%
flatten()
chairman.fname <- results.committee.members %>%
filter(title == "Chairman") %>%
select(legislator.first_name)
chairman.fname
chairman.fname <- results.committee.members %>%
filter(title == "Chairman") %>%
select(legislator.first_name) %>%
first
chairman.fname
results.committee.members
View(results.committee.members)
chairman.fname <- results.committee.members %>%
filter(title == "Chair") %>%
select(legislator.first_name) %>%
first
chairman.fname
chairman.lname <- results.committee.members %>%
filter(title== "Chair") %>%
select(legislator.last_name) %>%
first
committee.count <- results.commitee.members %>% count()
results.committee.members <- fromJSON(content(response.committee.members, "text"))$results$members[[1]] %>%
flatten()
chairman.fname <- results.committee.members %>%
filter(title == "Chair") %>%
select(legislator.first_name) %>%
first
chairman.lname <- results.committee.members %>%
filter(title== "Chair") %>%
select(legislator.last_name) %>%
first
committee.count <- results.commitee.members %>% count()
committee.count <- results.committee.members %>% count()
majority.or.minority <- results.committee.members %>%
filter(legislator.bioguide_id == my.committee.member) %>%
first
my.committee.name
committee.info <- "This committee is a standing committee of the U.S. House of Representatives. It oversees the federal budget process, reviews all bills and resolutions on the budget, and monitors agencies and programs funded outside of the budgetary process."
committee.males <- results.committee.members %>%
filter(legislator.gender == "M") %>%
count()
committee.females <- results.committee.members %>%
filter(legislator.gender == "F") %>%
count()
committee.males.percent <- (committee.males/committee.count) * 100
committee.males.percent
committee.males.percent <- round((committee.males/committee.count) * 100, digits = 1)
committee.males.percent
committee.females.percent <- round((committee.females/committee.count) * 100, digits = 2)
committee.females.percent
majority.or.minority
View(rep.committees)
cereal <- read.table('~/Desktop/INFO201/a8-building-apps-michellewho/data/cereal.tsv', header = TRUE, stringsAsFactors=FALSE)
shiny::runApp('Desktop/INFO201/a8-building-apps-michellewho')
library(dplyr)
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
getwd()
setwd("~/Desktop/INFO201/NFL-Project-Proposal")
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
defense.team <- c('DT', 'DE', 'DB', 'MLB', 'OLB', 'CB', 'S', 'FS', 'ILB', 'DL', 'SS', 'LB')
offense.team <- c('C', 'G', 'T', 'QB', 'RB', 'WR', 'TE', 'OL', 'NT', 'FB')
special.team <- c('K', 'H', 'LS', 'P', 'KOS', 'KR', 'PR')
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
# Takes in a position to determine which team a player is on
GetTeam <- function(pos) {
if (length(grep(pos, defense.team)) != 0) {
team = 'Defense'
} else if (length(grep(pos, offense.team)) != 0) {
team = 'Offense'
} else if (length(grep(pos, special.team)) != 0) {
team = 'Special Teams'
} else {
team = NULL
}
return (team)
}
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
Agg_Position <- function(pos) {
if (pos == 'LB' | pos == 'MLB' | pos == 'ILB' | pos == 'OLB') {
new.pos = 'LB'
} else if (pos == 'S' | pos == 'SS' | pos == 'FS') {
new.pos = 'S'
} else if (pos == 'CB' | pos == 'DB') {
new.pos = 'CB'
} else {
new.pos = pos
}
return(new.pos)
}
mutate(GeneralizedPosition = (lapply(draft.data$Pos, Agg_Position)))
mutate(GeneralizedPosition = (lapply(draft.data$Pos, Agg_Position)))
draft.data <- draft.data %>%
mutate(GeneralizedPosition = (lapply(draft.data$Pos, Agg_Position)))
select(draft.data, Pos, GeneralizedPosition)
View(select(draft.data, Pos, GeneralizedPosition))
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
draft.data <- draft.data %>%
mutate(GenPos = (lapply(draft.data$Pos, Agg_Position)))
shiny::runApp('RaffiMichelle/RaffiMichelle')
select(draft.data, Year)
library(dplyr)
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
#Data for this chart
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
defense.team <- c('DT', 'DE', 'DB', 'MLB', 'OLB', 'CB', 'S', 'FS', 'ILB', 'DL', 'SS', 'LB')
offense.team <- c('C', 'G', 'T', 'QB', 'RB', 'WR', 'TE', 'OL', 'NT', 'FB')
special.team <- c('K', 'H', 'LS', 'P', 'KOS', 'KR', 'PR')
GetTeam <- function(pos) {
if (length(grep(pos, defense.team)) != 0) {
team = 'Defense'
} else if (length(grep(pos, offense.team)) != 0) {
team = 'Offense'
} else if (length(grep(pos, special.team)) != 0) {
team = 'Special Teams'
} else {
team = NULL
}
return (team)
}
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
Agg_Position <- function(pos) {
if (pos == 'LB' | pos == 'MLB' | pos == 'ILB' | pos == 'OLB') {
new.pos = 'LB'
} else if (pos == 'S' | pos == 'SS' | pos == 'FS') {
new.pos = 'S'
} else if (pos == 'CB' | pos == 'DB') {
new.pos = 'CB'
} else {
new.pos = pos
}
return(new.pos)
}
draft.data <- draft.data %>%
mutate(GenPos = (lapply(draft.data$Pos, Agg_Position)))
select(draft.data, Year)
View(select(draft.data, Year))
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk) %>%
order_by(Year)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
order_by(draft.data, Year)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk) %>%
group_by(Year) %>
order_by(Year)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk) %>%
group_by(Year) %>
order_by(Year)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk) %>%
group_by(Year) %>
order(Year)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk) %>%
group_by(Year) %>
order('Year')
View(draft.data)
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
library(dplyr)
defense.team <- c('DT', 'DE', 'DB', 'MLB', 'OLB', 'CB', 'S', 'FS', 'ILB', 'DL', 'SS', 'LB')
offense.team <- c('C', 'G', 'T', 'QB', 'RB', 'WR', 'TE', 'OL', 'NT', 'FB')
special.team <- c('K', 'H', 'LS', 'P', 'KOS', 'KR', 'PR')
GetTeam <- function(pos) {
if (length(grep(pos, defense.team)) != 0) {
team = 'Defense'
} else if (length(grep(pos, offense.team)) != 0) {
team = 'Offense'
} else if (length(grep(pos, special.team)) != 0) {
team = 'Special Teams'
} else {
team = NULL
}
return (team)
}
GetTeam <- function(pos) {
if (length(grep(pos, defense.team)) != 0) {
team = 'Defense'
} else if (length(grep(pos, offense.team)) != 0) {
team = 'Offense'
} else if (length(grep(pos, special.team)) != 0) {
team = 'Special Teams'
} else {
team = NULL
}
return (team)
}
shiny::runApp('RaffiMichelle/RaffiMichelle')
filter(draft.data, Year == 1895)
View(filter(draft.data, Year == 1895))
View(filter(draft.data, Year == 1985))
draft.data <- draft.data %>%
mutate(GenPos = (lapply(draft.data$Pos, Agg_Position)))
View(filter(draft.data, GenPos == 'Defense', Pos == 'CB'))
View(filter(draft.data, GenPos == 'Defense'))
View(filter(draft.data, GenPos == Defense))
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
library(dplyr)
# Scatterplot that maps position to type of statistic, based on round pick
#setwd("~/Desktop/INFO201/NFL-Project-Proposal")
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
#Data for this chart
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
defense.team <- c('DT', 'DE', 'DB', 'MLB', 'OLB', 'CB', 'S', 'FS', 'ILB', 'DL', 'SS', 'LB')
offense.team <- c('C', 'G', 'T', 'QB', 'RB', 'WR', 'TE', 'OL', 'NT', 'FB')
special.team <- c('K', 'H', 'LS', 'P', 'KOS', 'KR', 'PR')
# Takes in a position to determine which team a player is on
GetTeam <- function(pos) {
if (length(grep(pos, defense.team)) != 0) {
team = 'Defense'
} else if (length(grep(pos, offense.team)) != 0) {
team = 'Offense'
} else if (length(grep(pos, special.team)) != 0) {
team = 'Special Teams'
} else {
team = NULL
}
return (team)
}
# Add column to dataframe that includes specific positions
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
#Adding column to make calculations easier
Agg_Position <- function(pos) {
if (pos == 'LB' | pos == 'MLB' | pos == 'ILB' | pos == 'OLB') {
new.pos = 'LB'
} else if (pos == 'S' | pos == 'SS' | pos == 'FS') {
new.pos = 'S'
} else if (pos == 'CB' | pos == 'DB') {
new.pos = 'CB'
} else {
new.pos = pos
}
return(new.pos)
}
# Because some positions are very specific, add a column to the dataframe that provides a generalized position for each player
draft.data <- draft.data %>%
mutate(GenPos = (lapply(draft.data$Pos, Agg_Position)))
GetYearAvg <- function(year) {
}
# scatterplot: x axis = set of years from 1985-2015 (30 pts for each statistic)
# user selects position and statistic
# each datapoint represents one year
# calculate average of statistic per year
# y axis = statistic
View(draft.data)
View(filter(draft.data, Team == 'Defense', GenPos == 'CB'))
View(filter(draft.data, Team == 'Defense', GenPos == 'CB', Def_Int != NULL))
View(filter(draft.data, Team == 'Defense', GenPos == 'CB'))
temp <- filter(draft.data, Team == 'Defense', GenPos == 'CB') %>%
select(Year, Player, Def_Int, Team, GenPos)
View(temp)
temp <- filter(Def_Int != NULL)
temp <- filter(temp, Def_Int != NULL)
temp <- filter(temp, Def_Int > 0)
unique(draft.data, Year)
unique(draft.data$Year)
all.years <- unique(draft.data$Year)
2>=1
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0)
View(year.data)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0) %>%
group_by(Year)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0) %>%
group_by(Year) %>%
arrange(Year)
View(year.data)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0) %>%
group_by(Year) %>%
arrange(Year) %>%
filter(Year == 1985)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0) %>%
group_by(Year) %>%
arrange(Year) %>%
filter(Year == 1985) %>%
summarise(mean= mean(Def_Int))
year.mean <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0) %>%
group_by(Year) %>%
arrange(Year) %>%
filter(Year == 1985) %>%
summarise(mean= mean(Def_Int)) %>%
select(mean)
year.mean
year.mean[1,2]
year.mean$mean
year.mean <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0) %>%
group_by(Year) %>%
arrange(Year) %>%
filter(Year == 1985) %>%
summarise(mean= mean(Def_Int)) %>%
mean
GetYearAvg <- function(pos.type, pos, stat, year) {
year.data <- draft.data %>%
filter(Team == pos.type, GenPos == pos, stat >= 0) %>%
group_by(Year) %>%
arrange(Year) %>%
filter(Year == year) %>%
summarise(mean = mean(Def_Int))
return (year.data$mean)
}
year.stats <- c(lapply(unique(draft.data$Year), GetYearAvg))
GetYearAvg('Defense', 'CB', 'Def_Int')
GetYearAvg('Defense', 'CB', 'Def_Int', 1985)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', 'Def_Int' >= 0)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', 'Def_Int' >= 0)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB', Def_Int >= 0)
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB') %>%
group_by(Year) %>%
arrange(Year) %>%
filter(Year == 1985) %>%
summarise(mean = mean('Def_Int'))
year.data <- draft.data %>%
filter(Team == 'Defense', GenPos == 'CB') %>%
group_by(Year) %>%
arrange(Year) %>%
filter(Year == 1985) %>%
summarise(mean = mean(Def_Int))
unique.years <- unique(draft.data$Year)
shiny::runApp()
shiny::runApp()
shiny::runApp('RaffiMichelle/RaffiMichelle')
shiny::runApp('RaffiMichelle/RaffiMichelle')
