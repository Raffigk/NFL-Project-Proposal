flatten()
return (results.leg)
}
rep.id <- select(results.leg, results.bioguide_id)
lapply(rep.id, getRepresentativeData())
lapply(rep.id, getRepresentativeData
rep.committees <- lapply(rep.id, getRepresentativeData
rep.committees <- lapply(rep.id, getRepresentativeData)
getRepresentativeData <- function(id) {
rep.committees <- lapply(rep.id, getRepresentativeData)
rep.committees <- lapply(rep.id, getRepresentativeData)
rep.committees
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.leg <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.committees <- lapply(rep.id, getRepresentativeData)
rep.commitees
rep.commitees
View(rep.commitees)
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.leg <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.committees <- lapply(rep.id, getRepresentativeData)
)
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.leg <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.committees <- lapply(rep.id, getRepresentativeData)
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", J000298))
results.leg <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (resu
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", J000298))
results.leg <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", J000298))
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", "J000298"))
results.leg <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
response.rep
results.rep
results.leg
View(results.leg)
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.leg <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
results.leg
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.committees <- lapply(rep.id, getRepresentativeData)
rep.id
is.data.frame(rep.id)
rep.id <- select(results.leg, results.bioguide_id)
rep.id <- select(results.leg, results.bioguide_id)
rep.id
rep.id <- select(results.leg, results.bioguide_id)
results.leg
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
response.leg <- GET(paste0(base.uri, "/legislators/locate?zip=98105"))
results.leg <- fromJSON(content(response.leg, "text")) %>%
data.frame() %>%
flatten()
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.id <- select(results.leg, results.bioguide_id)
rep.id
rep.committees <- lapply(rep.id, getRepresentativeData)
rep.committees <- lapply_(rep.id, getRepresentativeData)
rep.id <- select(results.leg, results.bioguide_id)
rep.committees <- lapply_(rep.id, getRepresentativeData)
rep.committees <- lapply(rep.id, getRepresentativeData)
length(url)
url
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", "J000298"))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
results.rep
rep.id <- results.leg$results.bioguide_id
rep.committees <- lapply(rep.id, getRepresentativeData)
rep.committees
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", "J000298"))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- lapply(rep.id, getRepresentativeData)
View(rep.committeses)
View(rep.committees)
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- lapply(rep.id, getRepresentativeData)
View(rep.committees)
GetRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- lapply(rep.id, GetRepresentativeData)
View(rep.committees)
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
View(rep.committees)
GetRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.rep)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
View(rep.committees)
rep.committees <- left_join(rep.id, rep.committees)
rep.committees <- join(rep.id, rep.committees)
rep.committees
View(rep.committees)
rep
results.rep
View(results.rep)
View(legislator.table)
results.leg
View(results.leg)
join.rep.committees <- (results.leg, rep.committees, by = results.bioguide_id)
join.rep.committees <- (results.leg, rep.committees, by = results.bioguide_id)
join.rep.committees <- (results.leg, rep.committees, by = "results.bioguide_id")
join.rep.committees <- join(results.leg, rep.committees, by = "results.bioguide_id")
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id")
join.rep.committees <- full_join(results.leg, rep.committees, by = results.bioguide_id)
results.leg
results.leg$results.bioguide_id
rep.committees$results.bioguide_id
join.rep.committees <- left_join(results.leg, rep.committees, by = results.bioguide_id)
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id"")
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id")
GetRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
mutate(ID = id) %>%
flatten()
return (results.rep)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
rep.committees$ID
GetRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
mutate(results.bioguide_id = id) %>%
flatten()
return (results.rep)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id")
join.rep.committees
View(join.rep.committees)
join.rep.committees <- left_join(results.leg, rep.committees, by = "results.bioguide_id")
View(join.rep.committees)
join.rep.committees <- right_join(results.leg, rep.committees, by = "results.bioguide_id")
View(join.rep.committees)
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id")
View(join.rep.committees)
barplot(no.comm, main="Committees Served on by Each Rep", horiz=TRUE, names.arg=names)
barplot(joined.rep.committees, main="Committees Served on by Each Rep", horiz=TRUE, names.arg=names)
counts <- table(join.rep.committees$results.bioguide_id)
barplot(counts, main="Car Distribution", horiz=TRUE,
names.arg=c("3 Gears", "4 Gears", "5 Gears"))
is.data.frame(join.rep.committees)
order(join.rep.committees$results.bioguide_id, decreasing = TRUE)
counts <- table(join.rep.committees$results.bioguide_id, decreasing = TRUE)
barplot.data <- join.rep.committees %>%
group_by(results.bioguide_id)
arrange(desc(disp))
barplot.data <- join.rep.committees %>%
group_by(results.bioguide_id) %>%
arrange(desc(disp))
arrange(desc)
barplot.data <- join.rep.committees %>%
group_by(results.bioguide_id) %>%
arrange(desc)
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(reuslts.first_name, results.last_name, count.x)
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
barplot(rep.committees, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
rep.committees
View(rep.committees)
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste0(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- rep.committees %>%
group_by(results.bioguide_id) %>%
summarise(count = n()) %>%
left_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
View(rep.committees)
barplot(rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste0(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- rep.committees %>%
group_by(results.bioguide_id) %>%
summarise(count = n()) %>%
left_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
View(rep.committees)
rep.id <- results.leg$results.bioguide_id
rep.committees
colnames(rep.committees)
colnames(rep.committees)
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 4))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", x= "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), horiz = TRUE, xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", las=2, horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", las = 0, horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", las = 1, horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar=c(5, 4, 4, 8) + 0.1), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar=c(2, 4, 5, 3), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar=c(2, 4, 5, 3)), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(las = 1), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar = rep(.5,4)), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
par(mar = c(5, 8, 8, 2))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
par(mar = c(5, 8, 8, 2))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
par(mar = c(5, 8, 8, 2))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
rep.committees$results.bioguide_id
rand(rep.committees$results.bioguide_id)
cantwell.id <- rep.committees$results.bioguide_id
rep.committees$results.bioguide_id
cantwell.id <- rep.committees$results.bioguide_id[1]
cantwell.id
results.rep
View(results.rep)
results.leg
View(results.leg)
cantwell.id <- rep.committees$results.bioguide_id[3]
cantwell.id <- results.leg$results.bioguide_id[3]
cantwell.id
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id))
response.commit
cantwell.id <- results.leg$results.bioguide_id[3]
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id))
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
results.dist
View(results.dist)
cantwell.id <- results.leg$results.bioguide_id[3]
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "subcommittee=false"))
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "subcommittee=false"))
response.commit
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id))
response.commit
View(response.commit)
response.commit
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "&subcommittee=false"))
response.commit
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
cantwell.id <- results.leg$results.bioguide_id[3]
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "&subcommittee=false"))
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
results.dist
cantwell.committee <- results.dist[1]
View(cantwell.committee)
cantwell.committee <- results.dist[, 1]
View(cantwell.committee)
cantwell.committee <- results.dist[1, ]
View(cantwell.committee)
results.leg
View(results.leg)
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= "members""))
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
response.commit
View(results.dist)
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
body <- fromJSON(content(results.dist,"text"))$results$members[[1]] %>% flatten()
View(results.dist)
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
cantwell.committee.id <- cantwell.committee$results.committee_id
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
View(all.members)
results.dist <- fromJSON(content(all.members, "text")) %>%
data.frame() %>%
flatten()
results.all.members <- fromJSON(content(all.members, "text")) %>%
data.frame() %>%
flatten()
View(results.dist)
View(results.all.members)
body <- fromJSON(content(all.members,"text"))$results$members[[1]] %>% flatten()
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'")) %>% data.frame()
all.members <- data.frame(all.members)
join.rep.committees
View(join.rep.committees)
View(results.leg)
View(rep.committees)
committee <- rep.committees %>%
filter(results.subcommittee == FALSE)
chosen.committee <- committee[6,]
chosen.committee <- committee[1,]
my.committee <- committee[1,]
my.committee.member.fname <- filter(results.leg, results.bioguide_id == selected.committee.member) %>%
select(results.first_name) %>%
first
my.committee.member.fname <- filter(results.leg, results.bioguide_id == my.committee.member) %>%
select(results.first_name) %>%
first
my.committee.member <- my.committee$results.bioguide_id
my.committee.member.fname <- filter(results.leg, results.bioguide_id == my.committee.member) %>%
select(results.first_name) %>%
first
my.committee.member.fname
my.committee.member.lname <- filter(results.leg, results.bioguide_id == my.committee.member) %>%
select(results.last_name) %>%
first
my.committee.name <- my.committee$results.name
my.committee.id <- my.committee$results.committee_id
committee.members <- GET(paste0(base.uri, "/committees?committee_id=", my.committee.id, "&fields=members"))
chairman.fname <- results.committee.members %>%
filter(title == "Chairman") %>%
select(legislator.first_name)
my.committee.name <- my.committee$results.name
my.committee.id <- my.committee$results.committee_id
response.committee.members <- GET(paste0(base.uri, "/committees?committee_id=", my.committee.id, "&fields=members"))
results.committee.members <- fromJSON(content(response.committee.members, "text"))$results$members[[1]] %>%
flatten()
chairman.fname <- results.committee.members %>%
filter(title == "Chairman") %>%
select(legislator.first_name)
chairman.fname
chairman.fname <- results.committee.members %>%
filter(title == "Chairman") %>%
select(legislator.first_name) %>%
first
chairman.fname
results.committee.members
View(results.committee.members)
chairman.fname <- results.committee.members %>%
filter(title == "Chair") %>%
select(legislator.first_name) %>%
first
chairman.fname
chairman.lname <- results.committee.members %>%
filter(title== "Chair") %>%
select(legislator.last_name) %>%
first
committee.count <- results.commitee.members %>% count()
results.committee.members <- fromJSON(content(response.committee.members, "text"))$results$members[[1]] %>%
flatten()
chairman.fname <- results.committee.members %>%
filter(title == "Chair") %>%
select(legislator.first_name) %>%
first
chairman.lname <- results.committee.members %>%
filter(title== "Chair") %>%
select(legislator.last_name) %>%
first
committee.count <- results.commitee.members %>% count()
committee.count <- results.committee.members %>% count()
majority.or.minority <- results.committee.members %>%
filter(legislator.bioguide_id == my.committee.member) %>%
first
my.committee.name
committee.info <- "This committee is a standing committee of the U.S. House of Representatives. It oversees the federal budget process, reviews all bills and resolutions on the budget, and monitors agencies and programs funded outside of the budgetary process."
committee.males <- results.committee.members %>%
filter(legislator.gender == "M") %>%
count()
committee.females <- results.committee.members %>%
filter(legislator.gender == "F") %>%
count()
committee.males.percent <- (committee.males/committee.count) * 100
committee.males.percent
committee.males.percent <- round((committee.males/committee.count) * 100, digits = 1)
committee.males.percent
committee.females.percent <- round((committee.females/committee.count) * 100, digits = 2)
committee.females.percent
majority.or.minority
View(rep.committees)
cereal <- read.table('~/Desktop/INFO201/a8-building-apps-michellewho/data/cereal.tsv', header = TRUE, stringsAsFactors=FALSE)
shiny::runApp('Desktop/INFO201/a8-building-apps-michellewho')
library(dplyr)
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
getwd()
setwd("~/Desktop/INFO201/NFL-Project-Proposal")
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
full.draft.data <- read.csv('data/Final_Draft_Data.csv', stringsAsFactors = FALSE)
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
defense.team <- c('DT', 'DE', 'DB', 'MLB', 'OLB', 'CB', 'S', 'FS', 'ILB', 'DL', 'SS', 'LB')
offense.team <- c('C', 'G', 'T', 'QB', 'RB', 'WR', 'TE', 'OL', 'NT', 'FB')
special.team <- c('K', 'H', 'LS', 'P', 'KOS', 'KR', 'PR')
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
# Takes in a position to determine which team a player is on
GetTeam <- function(pos) {
if (length(grep(pos, defense.team)) != 0) {
team = 'Defense'
} else if (length(grep(pos, offense.team)) != 0) {
team = 'Offense'
} else if (length(grep(pos, special.team)) != 0) {
team = 'Special Teams'
} else {
team = NULL
}
return (team)
}
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
Agg_Position <- function(pos) {
if (pos == 'LB' | pos == 'MLB' | pos == 'ILB' | pos == 'OLB') {
new.pos = 'LB'
} else if (pos == 'S' | pos == 'SS' | pos == 'FS') {
new.pos = 'S'
} else if (pos == 'CB' | pos == 'DB') {
new.pos = 'CB'
} else {
new.pos = pos
}
return(new.pos)
}
mutate(GeneralizedPosition = (lapply(draft.data$Pos, Agg_Position)))
mutate(GeneralizedPosition = (lapply(draft.data$Pos, Agg_Position)))
draft.data <- draft.data %>%
mutate(GeneralizedPosition = (lapply(draft.data$Pos, Agg_Position)))
select(draft.data, Pos, GeneralizedPosition)
View(select(draft.data, Pos, GeneralizedPosition))
draft.data <- full.draft.data %>%
select(Year, Rnd, Pick, Player, Pos, Cmp, Pass_Att, Pass_Yds, Pass_Int, Rush_Att, Rush_Yds, Rush_TDs, Rec, Rec_Yds, Rec_Tds, Tkl, Def_Int, Sk)
draft.data <- draft.data %>%
mutate(Team= (lapply(draft.data$Pos, GetTeam)))
draft.data <- draft.data %>%
mutate(GenPos = (lapply(draft.data$Pos, Agg_Position)))
