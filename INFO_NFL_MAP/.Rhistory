x<-6
x
x<-7
x
# Tesla's stock value speeds past Ford
Elon Musk, the _world famous_ **entrepreneur** and **visioner** has led Tesla ahead of the massive automobile manufacturer, Ford. Here is more details about it in this [news article:](http://www.latimes.com/business/autos/la-fi-hy-tesla-1q-production-20170403-story.html)
> Right now, Tesla bulls are on a thunderous run. The stock closed Monday at $298.52, up up $20.22, or 7% for the day and up 64% since Dec. 1, 2016. That put Tesla’s market value at $48.63 billion, rushing past Ford Motor’s $45.47 billion, even though Ford pulls in 22 times Tesla’s revenue and earned profits of $4.6 billion in 2016 compared with Tesla’s $667-million loss.
Here is a picture of Tesla's model S:
![Alt text](imgs/Assignment_1_pic.jpg)
source('~/.active-rstudio-document')
#comment
name <- "Jon"
name
source('~/Desktop/m6-r-intro/exercise-1/exercise.R')
source('~/Desktop/m6-r-intro/exercise-1/exercise.R')
source('~/Desktop/m6-r-intro/exercise-1/exercise.R')
# Exercise-1: practice with basic syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- "falkirk"
# Assign your name to the variable `my.name`
my.name <- "Jon"
# Assign your height to a variable `my.height`
my.height <- 72 #inches
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 2
# Create a variable `puppy.price`, which is how expensive you think a puppy is
puppy.price <- 999.99
# Create a variable `total.cost` that has the total cost of all of your puppies
total.cost <- puppy.price * puppies
budget <- 1000
# Create a boolean variable `too.expensive`, set to true if the cost is greater than $1,000
too.expensive <- total.cost > budget
# Create a variable `max.puppies`, which is the number of puppies you can afford for $1K.
max.puppies <- budget / puppy.price
a
a
max.puppies <- budget / puppy.price
a = 1
b = 2
cool(a, b)
cool <- function(a, b) {
answer <- a + b
return (answer)
}
a = 1
b = 2
cool(a, b)
# Exercise 1: writing and executing functions
# Write a function `AddThree` that adds 3 to an input value
AddThree <- function(input) {
input <- input + 3
return (input)
}
# Create a variable `ten` by passing 7 to your `AddThree` function
ten <- AddThree(7)
# Write a function `FeetToMeters` that converts from feet to meters
FeetToMeters <- function(feet) {
meters <- feet * .3048
return (meters)
}
# Create a variable `height.in.feet` that is your height in feet
height.in.feet <- 6
# Create a variable `height.in.meters` by passing `height.in.feet` to your `FeetToMeters` function
height.in.meters <- FeetToMeters(height.in.feet)
# Exercise 1: Creating and Indexing Vectors
# Create a vector `first.ten` that has the values 10 through 20 in it (using the : operator)
first.ten <- (10:20)
# Create a vector `next.ten` that has the values 21 through 30 in it (using the seq operator)
next.ten <- (21:30)
# Create a vector `all.numbers` by combining the vectors `first.ten` and `next.ten`
all.numbers <- c(first.ten, next.ten)
# Create a variable `eleventh` that is equal to the 11th element in your vector `all.numbers`
eleventh <- all.numbers(11)
# Create a vector `some.numbers` that is equal to the second through the 5th elements of `all.numbers`
some.numbers <- all.numbers(2:5)
# Create a variable `len` that is equal to the length of your vector `all.numbers`
len <- length(all.numbers)
### Bonus ###
# Create a vector `odd` that holds the odd numbers from 1 to 100
numbers <- (1:100)
odd <- numbers(TRUE, FALSE)
# Using the `all` and `%%` operators, confirm that all of the numbers in your `odd` vector are odd
library(jsonlite)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0(base.url, "districts/")
UW.district.url <- paste0(district.url, "locate?zip=", zip)
UW.district <- GET(UW.district.url)
uw.raw.content <- UW.district$content
uw.to.char <- rawToChar(uw.raw.content)
library(jsonlite)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0(base.url, "districts/")
UW.district.url <- paste0(district.url, "locate?zip=", zip)
UW.district <- GET(urll = base.url, path = district.url)
uw.raw.content <- UW.district$content
uw.to.char <- rawToChar(uw.raw.content)
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0(base.url, "districts/")
UW.district.url <- paste0(district.url, "locate?zip=", zip)
UW.district <- GET(urll = base.url, path = district.url)
uw.raw.content <- UW.district$content
uw.to.char <- rawToChar(uw.raw.content)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(jsonlite)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0("districts/locate?=91361")
my.district <- GET(url = di, path = district.url)
my.district.to.char <- rawToChar(UW.district$content)
library(jsonlite)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0("districts/locate?=91361")
my.district <- GET(url = base.url, path = district.url)
my.district.to.char <- rawToChar(UW.district$content)
install.packages("knitr")
library(jsonlite)
library(dplyr)
library(httr)
library(knitr)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0("districts/locate?=91361")
my.district <- GET(url = base.url, path = district.url)
my.district.to.char <- rawToChar(UW.district$content)
library(jsonlite)
library(dplyr)
library(httr)
library(knitr)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0("districts/locate?=91361")
my.district <- GET(url = base.url, path = district.url)
my.district.to.char <- rawToChar(my.district$content)
my.district.to.char
library(jsonlite)
library(dplyr)
library(httr)
library(knitr)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0("districts/locate?zip=91361")
my.district <- GET(url = base.url, path = district.url)
my.district.to.char <- rawToChar(my.district$content)
my.district.to.char
district.this.content <- fromJSON(my.district.to.char)
district.df <- as.data.frame(district.this.content)
district.df
library(jsonlite)
library(dplyr)
library(httr)
library(knitr)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0("districts/locate?zip=98105")
my.district <- GET(url = base.url, path = district.url)
my.district.to.char <- rawToChar(my.district$content)
district.this.content <- fromJSON(my.district.to.char)
district.df <- as.data.frame(district.this.content)
district.df
library(jsonlite)
library(dplyr)
library(httr)
library(knitr)
zip <- "98105"
base.url <- "https://congress.api.sunlightfoundation.com/"
district.url <- paste0("districts/locate?zip=", zip)
my.district <- GET(url = base.url, path = district.url)
my.district.to.char <- rawToChar(my.district$content)
district.this.content <- fromJSON(my.district.to.char)
district.df <- as.data.frame(district.this.content)
district.df
legislators.url <- paste0("legislators/locate!zip=", zip)
my.legislators <- GET(url = base.url, path = legislators.url)
my.legislators
my.legislators.to.char <- rawToChar(my.legislators$content)
my.legislators.to.char
legislators.url <- paste0("legislators/locate?zip=", zip)
my.legislators <- GET(url = base.url, path = legislators.url)
my.legislators.to.char <- rawToChar(my.legislators$content)
my.legislators.to.char
legislators.url <- paste0("legislators/locate?zip=", zip)
my.legislators <- GET(url = base.url, path = legislators.url)
my.legislators.to.char <- rawToChar(my.legislators$content)
legislators.this.content <- frontJSON(my.legislators.to.char)
legislator.df <- as.data.frame(legislators.this.content)
legislators.url <- paste0("legislators/locate?zip=", zip)
my.legislators <- GET(url = base.url, path = legislators.url)
my.legislators.to.char <- rawToChar(my.legislators$content)
legislators.this.content <- fronmJSON(my.legislators.to.char)
legislator.df <- as.data.frame(legislators.this.content)
legislators.url <- paste0("legislators/locate?zip=", zip)
my.legislators <- GET(url = base.url, path = legislators.url)
my.legislators.to.char <- rawToChar(my.legislators$content)
legislators.this.content <- fromJSON(my.legislators.to.char)
legislator.df <- as.data.frame(legislators.this.content)
legislator.df
View(legislator.df)
legislator.table <- kable(legislator.df)
legislator.table
rsconnect::showLogs()
shiny::runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
View(data)
data <- read.table("data/cereal.tsv", header = FALSE, stringsAsFactors = FALSE)
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
data <- read.table("data/cereal.tsv", header = FALSE, stringsAsFactors = FALSE)
View(data)
View(data.new)
View(data.new)
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
View(cereal.data)
library(shiny)
library(dplyr)
library(plotly)
cereal.data <- read.table("data/cereal.tsv", header = FALSE, stringsAsFactors = FALSE)
data.new <- cereal.data[2:78,]
library(shiny)
library(dplyr)
library(plotly)
cereal.data <- read.table("data/cereal.tsv", header = FALSE, stringsAsFactors = FALSE)
data.new <- cereal.data[2:78,]
View(cereal.data)
runApp('Desktop/INFO_201/INFO_201_HW/a8-building-apps-jwcantle11')
getwd()
getdw()
getwd()
setwd("~/Desktop/INFO_NFL")
setwd(")
setwd("~/Desktop/INFO_NFL")
getwd()
setwd("~/Desktop/INFO_NFL/INFO_NFL_MAP")
getwd()
